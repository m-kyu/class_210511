{"version":3,"sources":["comp/Item.js","comp/List.js","App.js","reportWebVitals.js","index.js"],"names":["Item","works","useState","work","className","isDone","id","name","city","hope","href","pUrl","target","resume","List","data","Data","map","w","App","useHistory","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"unPAGe,SAASA,EAAT,GAAuB,IAARC,EAAO,EAAPA,MAC1B,EAA2BC,oBAAS,GAApC,mBACA,GADA,UACuBA,mBAASD,IAAhC,mBAAOE,EAAP,UAmBA,OACI,mCACCA,GAEG,qBAAIC,UAAWD,EAAKE,OAApB,UACI,6BAAKF,EAAKG,KACV,+BAAKH,EAAKI,KAAV,KAAkBJ,EAAKK,KAAvB,OACA,6BAAKL,EAAKM,OACV,6BACI,mBAAGC,KAAMP,EAAKQ,KAAMC,OAAO,SAA3B,SACKT,EAAKQ,SAGd,6BAAI,mBAAGD,KAAMP,EAAKU,OAAQD,OAAO,SAA7B,SAAsC,0F,YChC3C,SAASE,IAGpB,IAAMC,EAAOC,EAAKb,KAElB,OACI,mCACI,0BAASC,UAAU,OAAnB,UACI,6JAEA,kCACA,gCACA,+BACI,8CACA,8CACA,0DACA,0DACA,yDAGJ,gCAEQW,GAAQA,EAAKE,KAAI,SAACC,GAAD,OACb,cAAClB,EAAD,CAAMC,MAAOiB,GAAQA,EAAEZ,iB,yBCIpCa,MAzBf,WAOE,OANWC,cAOT,cAAC,IAAD,UAME,+BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,WCX5BU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae36de82.chunk.js","sourcesContent":["import {useState,useEffect, useRef} from \"react\";\r\nimport '../App.css';\r\n\r\nexport default function Item({works}){\r\n    const [isDone,setIsDone] = useState(true);\r\n    const [work,setWork] = useState(works);\r\n   \r\n    function visible(){\r\n        setIsDone(!isDone)\r\n        // isDone == \"checked=\" ? setIsDone('') : setIsDone('checked');\r\n    }\r\n\r\n    function dataProcess(){       \r\n        fetch(`./work/${works.id}`,{\r\n            method:\"put\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify({...work, \"isDone\":`${isDone}`})\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWork(data);\r\n        });  \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {work && \r\n\r\n            <tr className={work.isDone}>\r\n                <td>{work.id}</td>\r\n                <td>{work.name} ({work.city})</td>\r\n                <td>{work.hope}</td>\r\n                <td>                \r\n                    <a href={work.pUrl} target=\"_blank\">\r\n                        {work.pUrl}\r\n                    </a>\r\n                </td>\r\n                <td><a href={work.resume} target=\"_blank\"><button>이력서 다운로드</button></a></td>\r\n{/*                \r\n                  <td>\r\n                    <input type=\"checkbox\" checked={isDone} onChange={visible} />\r\n                    <button onClick={dataProcess}>적용</button>\r\n                </td>            */}\r\n            </tr>\r\n        }\r\n        </>\r\n    );\r\n}","import useFetch from './useFetch';\r\nimport Item from './Item';\r\nimport Data from '../db/data.json';\r\n\r\n\r\nexport default function List (){\r\n    \r\n    // const data = useFetch(\"./work/\");\r\n    const data = Data.work;\r\n    \r\n    return(\r\n        <>\r\n            <article className=\"list\">\r\n                <h1>N07) UIUX디자인 웹퍼블리셔&프론트앤드 - 수강생 작품</h1>\r\n                \r\n                <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>순번</th>\r\n                    <th>이름</th>\r\n                    <th>희망업무</th>\r\n                    <th>작품보기</th>\r\n                    <th>이력서</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data && data.map((w)=>(\r\n                            <Item works={w} key={w.id} />\r\n                        ))\r\n                    }\r\n                </tbody>           \r\n                </table>\r\n            </article>\r\n        </>\r\n    );\r\n}","import List from './comp/List';\nimport Index from './comp/Index';\nimport AddStudent from './comp/AddStudent';\nimport {HashRouter, Route, Switch,Link, useHistory} from \"react-router-dom\";\n\n\n\nfunction App() {\n  let hist = useHistory();\n\n  function history(){\n    hist.push('/add');\n  } \n\n  return (\n    <HashRouter >      \n      {/* <header>\n        <Link to=\"/\" >Home</Link>\n        <Link to=\"/add\">수강생 등록</Link>\n        <Link to=\"/list\" >수강생 리스트</Link>\n      </header> */}\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          {/* <Route path=\"/\" component={Index} />\n          <Route path=\"/add\" ><AddStudent /></Route> */}\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}