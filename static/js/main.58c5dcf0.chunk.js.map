{"version":3,"sources":["comp/useFetch.js","comp/Item.js","comp/List.js","comp/Index.js","comp/AddStudent.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","works","Item","isDone","setIsDone","work","setWork","className","src","thum","name","tel","email","pUrl","summarize","type","checked","onChange","onClick","id","method","headers","body","JSON","stringify","List","colspan","map","w","Index","AddStudent","useRef","temple","addData","setAddData","handleChange","e","target","value","dataProcess","alert","current","onSubmit","preventDefault","ref","App","basename","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58c5dcf0.chunk.js","sourcesContent":["import {useState,useEffect} from \"react\";\r\n\r\nconst useFetch = (url)=>{\r\n    let [data, setData] = useState();\r\n    \r\n    useEffect(()=>{\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(works => {\r\n            setData(works);\r\n        });\r\n      },[url])\r\n\r\n    return data;\r\n}\r\nexport default useFetch;","import {useState,useEffect, useRef} from \"react\";\r\nimport '../App.css';\r\n\r\nexport default function Item({works}){\r\n    const [isDone,setIsDone] = useState(true);\r\n    const [work,setWork] = useState(works);\r\n   \r\n    function visible(){\r\n        setIsDone(!isDone)\r\n        // isDone == \"checked=\" ? setIsDone('') : setIsDone('checked');\r\n    }\r\n\r\n    function dataProcess(){       \r\n        fetch(`./work/${works.id}`,{\r\n            method:\"put\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify({...work, \"isDone\":`${isDone}`})\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWork(data);\r\n        });  \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {work && \r\n            <tr className={work.isDone}>\r\n                <td><img src={work.thum} /></td>\r\n                <td>\r\n                    {work.name} ({work.tel} / {work.email})\r\n                    <p>포트폴리오 - {work.pUrl}</p>\r\n                    <div>{work.summarize}</div>\r\n                </td>\r\n                <td>\r\n                    <input type=\"checkbox\" checked={isDone} onChange={visible} />\r\n                    <button onClick={dataProcess}>적용</button>\r\n                </td>            \r\n            </tr>\r\n        }\r\n        </>\r\n    );\r\n}","import useFetch from './useFetch';\r\nimport Item from './Item';\r\n\r\n\r\nexport default function List (){\r\n    \r\n    const data = useFetch(\"http://localhost:3001/work/\");\r\n    \r\n    return(\r\n        <>\r\n            <article className=\"add\">\r\n                <h1>수강생 리스트</h1>\r\n                <table>\r\n                <tr>\r\n                    <th colspan=\"3\">수강생</th>\r\n                </tr>\r\n                    {\r\n                        data && data.map((w)=>(\r\n                        <Item works={w} key={w.id} />\r\n                        ))\r\n                    }                \r\n                </table>\r\n            </article>\r\n        </>\r\n    );\r\n}","\r\nexport default function Index (){\r\n    return(\r\n        <>\r\n            <div>index page</div>\r\n        </>\r\n    );\r\n}","\r\nimport useFetch from './useFetch';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nimport '../App.css';\r\n\r\nconst AddStudent = () => {\r\n    const summarize = useRef();\r\n    const temple = {name:'',tel:'',email:'',pUrl:'',summarize:'', isDone:'true'}\r\n    const [addData, setAddData] = useState(temple);\r\n\r\n    const handleChange = (e)=>{\r\n        let {name,value} = e.target;\r\n        setAddData({...addData, [name]:value,});        \r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();   \r\n        dataProcess('post',addData);\r\n    }\r\n    const dataProcess = (type,data)=>{\r\n        fetch(`http://localhost:3001/work/`,{\r\n            method:type,\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(data)\r\n        });  \r\n        alert('등록되었습니다.');\r\n        setAddData(temple);\r\n        summarize.current.value = '';\r\n\r\n        \r\n        // const formData = new FormData();\r\n        // formData.append(\"thum\", selectedFile, selectedFile.name);\r\n        // setTimeout(()=>{console.log(\"thum\", selectedFile, selectedFile.name)},2000);\r\n        // fetch(`./`,{\r\n        //     method:type,\r\n        //     headers:{\"Content-Type\":\"multipart/form-data\"},\r\n        //     body:formData\r\n        // });\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <article className=\"add\">\r\n            \r\n            <h1>수강생 등록</h1>\r\n            <form  onSubmit={handleSubmit}>\r\n            <ul>\r\n                <li>\r\n                    <label>이름{addData.name}</label>\r\n                    <input type=\"text\" name=\"name\" value={addData.name} onChange={handleChange}/>\r\n                </li>\r\n                <li>\r\n                    <label>연락처</label>\r\n                    <input type=\"text\" name=\"tel\" value={addData.tel}  onChange={handleChange}/>\r\n                </li>\r\n                <li>\r\n                    <label>이메일</label>\r\n                    <input type=\"text\" name=\"email\" value={addData.email}  onChange={handleChange}/>\r\n                </li>\r\n                <li>\r\n                    <label>포폴URL</label>\r\n                    <input type=\"text\" name=\"pUrl\" value={addData.pUrl}  onChange={handleChange}/>\r\n                </li>\r\n                {/* <li>\r\n                    <label>썸네일</label>\r\n                    <input type=\"file\" name=\"thum\" multiple  onChange={handleChange}/>\r\n                </li>\r\n                <li>\r\n                    <label>이력서</label>\r\n                    <input type=\"file\" name=\"resume\" onChange={handleChange}/>\r\n                </li> */}\r\n                <li>\r\n                    <label>강사의견</label>\r\n                    <textarea ref={summarize} name=\"summarize\" onChange={handleChange}></textarea>\r\n                </li>\r\n                <li>\r\n                    <div className=\"btn_parent\">\r\n                        <input type=\"submit\" value=\"저장하기\"/>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            </form>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default AddStudent;\r\n","import List from './comp/List';\nimport Index from './comp/Index';\nimport AddStudent from './comp/AddStudent';\nimport {BrowserRouter, Route, Switch,Link} from \"react-router-dom\";\n\n\n\nfunction App() {\n   \n\n  return (\n    <BrowserRouter basename=\"class_210511\">      \n      <header>\n        <Link to=\"/\" >Home</Link>\n        <Link to=\"/add\" >수강생 등록</Link>\n        <Link to=\"/list\" >수강생 리스트</Link>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n          <Route path=\"/add\" ><AddStudent /></Route>\n          <Route path=\"/list\" component={List} />\n        </Switch>\n      </main>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}